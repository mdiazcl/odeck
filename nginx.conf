user www-data;
worker_processes auto;
worker_cpu_affinity auto;
pid /run/nginx.pid;

events {
    worker_connections 16384;
    multi_accept on;
    use epoll;
}

# (worker_connections * 2) + 500
worker_rlimit_nofile 33268;

http {
    ##
    # Basic Settings
    ##

    server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ## VirtualHosts and configs includes
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    ##
    # TLS
    ##

    # Droping support for older TLS versions : ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ecdh_curve X25519:sect571r1:secp521r1:secp384r1;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Droping support for older TLS versions : ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-D:ECDHE-RSA-CHACHA20-POLY1305-D:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA384';
    # Dropping support for TLS 1.2 ciphers
	ssl_ciphers 'TLS13+AESGCM+AES128:TLS13+AESGCM+AES256:TLS13+CHACHA20:EECDH+AESGCM:EECDH+CHACHA20';
    ssl_prefer_server_ciphers off;


    ##
    # Headers
    ##

	## Less Verbose for Nginx headers
	server_tokens off;

	## Common headers for security
	add_header Feature-Policy "geolocation none;midi none;notifications none;push none;sync-xhr none;microphone none;camera none;magnetometer none;gyroscope none;speaker self;vibrate none;fullscreen self;payment none;";
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Xss-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Server "ODeck Nginx enforced server";

	## OCSP settings
    ssl_stapling on;
    ssl_stapling_verify on;
    #ssl_trusted_certificate /etc/ssl/private/ocsp-certs.pem; # <- Add signing certs here
    resolver 127.0.0.11 1.0.0.1 8.8.4.4 valid=30s;
    resolver_timeout 5s;

    ##
    # Logging
    ##

    #access_log /var/log/nginx/access.log; #Disabled for performance

    access_log off;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


    ##
    # GeoIP
    ##

    #GeoIP (optional)
    #geoip_country  /usr/local/share/GeoIP/GeoIP.dat;
    #geoip_city     /usr/local/share/GeoIP/GeoLiteCity.dat;


    ##
    # Performance and Cache
    ##

	#See - https://www.nginx.com/blog/thread-pools-boost-performance-9x/
    aio threads;

	#Simple DOS mitigation
    ## Max c/s by ip
    limit_conn_zone $binary_remote_addr zone=limit_per_ip:10m;
    limit_conn limit_per_ip 40;

    # #Max rq/s by ip
    limit_req_zone $binary_remote_addr zone=allips:10m rate=400r/s;
    limit_req zone=allips burst=400 nodelay;

    # PHP
    #fastcgi_buffers 256 32k;
    #fastcgi_buffer_size 256k;
    #fastcgi_connect_timeout 4s;
    #fastcgi_send_timeout 120s;
    #fastcgi_read_timeout 120s;
    #fastcgi_busy_buffers_size 512k;
    #fastcgi_temp_file_write_size 512K;
    #reset_timedout_connection on;

    #Others
    open_file_cache max=2000 inactive=20s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 5;
    open_file_cache_errors off;

    client_max_body_size 50M;
    client_body_buffer_size 1m;
    client_body_timeout 15;
    client_header_timeout 15;
    keepalive_timeout 65;
    send_timeout 15;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
}
